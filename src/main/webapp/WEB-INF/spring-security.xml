<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
	
		<intercept-url pattern="/courses/**" access="isAuthenticated()" />
		<intercept-url pattern="/course/**" access="isAuthenticated()" />
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/courses" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout"  />
		<!-- enable csrf protection -->
		<csrf/>
	</http>
	<beans:bean id="userService"
		class="lms.dao.impl.CustomUserDetailsDAO">
		<beans:property name="usersByUsernameQuery" value="select * from user where username = ?"/>
		<beans:property name="authoritiesByUsernameQuery" value="select username, role from user where username =?" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<beans:bean id="customUserDetailsDAO"
		class="lms.dao.impl.CustomUserDetailsDAO">
		<beans:property name="usersByUsernameQuery" value="select * from user where username = ?"/>
		<beans:property name="authoritiesByUsernameQuery" value="select username, role from user where username =?" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<beans:bean id="UserDaoImpl" class="lms.dao.impl.UserDAOImpl" >
		<beans:property name="jdbcTemplate" ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean id="authenticationProvider"
		class="lms.service.impl.LimitLoginAuthenticationProvider" >
		<beans:property name="userDetailsService" ref="customUserDetailsDAO" />
		<beans:property name="userDetailsDAO" ref="UserDaoImpl" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" />
		<beans:property name="saltSource" ref="saltSource" />
	</beans:bean>
	<beans:bean id="saltSource"
    	class="org.springframework.security.authentication.dao.ReflectionSaltSource">
    		<beans:property name="userPropertyToUse" value="username" />
    </beans:bean>	

	<beans:bean id="passwordEncoder" 
    class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	
	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider ref="authenticationProvider"/>
	</authentication-manager>
	
</beans:beans>